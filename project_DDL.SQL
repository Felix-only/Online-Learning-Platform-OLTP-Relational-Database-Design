-- Generated by Oracle SQL Developer Data Modeler 21.4.1.349.1605
--   at:        2022-04-08 12:39:40 CST
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE country (
    country_id   NUMBER(7) NOT NULL,
    country_name VARCHAR2(30)
);

COMMENT ON COLUMN country.country_id IS
    'Country ID ';

COMMENT ON COLUMN country.country_name IS
    'The name of the country ';

ALTER TABLE country ADD CONSTRAINT country_pk PRIMARY KEY ( country_id );

CREATE TABLE course (
    course_id    NUMBER(7) NOT NULL,
    course_name  VARCHAR2(30),
    subject      VARCHAR2(30),
    "Level"      VARCHAR2(20),
    length       NUMBER(7, 2),
    capacity     NUMBER(10),
    prerequisite VARCHAR2(30),
    price        NUMBER(7, 2)
);

COMMENT ON COLUMN course.course_id IS
    'Course ID';

COMMENT ON COLUMN course.course_name IS
    'course name';

COMMENT ON COLUMN course.subject IS
    'Subject of the class. For example, English, Math ';

COMMENT ON COLUMN course."Level" IS
    'Level of the subject. For example, Level A in  English';

COMMENT ON COLUMN course.length IS
    'Length of the class in minute';

COMMENT ON COLUMN course.capacity IS
    'Max capacity of students in the class';

COMMENT ON COLUMN course.prerequisite IS
    'Prerequisite for taking the class';

COMMENT ON COLUMN course.price IS
    'Course price ';

ALTER TABLE course ADD CONSTRAINT course_pk PRIMARY KEY ( course_id );

CREATE TABLE discount (
    discount_id   NUMBER(7) NOT NULL,
    discount_name VARCHAR2(30),
    dis_amount    NUMBER(7, 2),
    description   VARCHAR2(50)
);

COMMENT ON COLUMN discount.discount_id IS
    'Discount ID';

COMMENT ON COLUMN discount.discount_name IS
    'name of the discount';

COMMENT ON COLUMN discount.dis_amount IS
    'Discount amount means the precentage of discount. For example, 0.3 means that 30% off. ';

COMMENT ON COLUMN discount.description IS
    'Description of discount ';

ALTER TABLE discount ADD CONSTRAINT discount_pk PRIMARY KEY ( discount_id );

CREATE TABLE employee (
    employee_id   NUMBER(7) NOT NULL,
    fname         VARCHAR2(30),
    lname         VARCHAR2(30),
    dob           DATE,
    street        VARCHAR2(30),
    city          VARCHAR2(30),
    state         VARCHAR2(30),
    zipcode       VARCHAR2(30),
    email         VARCHAR2(30),
    phone_number  NUMBER(20),
    salary        NUMBER(10, 2),
    hire_date     DATE,
    employee_type VARCHAR2(1) NOT NULL,
    country_id    NUMBER(7) NOT NULL
);

ALTER TABLE employee
    ADD CONSTRAINT ch_inh_employee CHECK ( employee_type IN ( 'O', 'T' ) );

COMMENT ON COLUMN employee.employee_id IS
    'Employee ID';

COMMENT ON COLUMN employee.fname IS
    'First name of employee ';

COMMENT ON COLUMN employee.lname IS
    'Last name of Employee ';

COMMENT ON COLUMN employee.dob IS
    'Date of Birth of employee';

COMMENT ON COLUMN employee.street IS
    'Address street of employee';

COMMENT ON COLUMN employee.city IS
    'City of Address of employee';

COMMENT ON COLUMN employee.state IS
    'State of address of employee';

COMMENT ON COLUMN employee.zipcode IS
    'ZipCode of employee''s address';

COMMENT ON COLUMN employee.email IS
    'Employee Email address ';

COMMENT ON COLUMN employee.phone_number IS
    'Employee phone number ';

COMMENT ON COLUMN employee.salary IS
    'Employee''s salary ';

COMMENT ON COLUMN employee.hire_date IS
    'Date of Hired ';

COMMENT ON COLUMN employee.employee_type IS
    'Type of employee. Could have instructor and other employee types. ';

ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( employee_id );

CREATE TABLE fk_teacher_course (
    employee_id NUMBER(7) NOT NULL,
    course_id   NUMBER(7) NOT NULL
);

ALTER TABLE fk_teacher_course ADD CONSTRAINT fk_teacher_course_pk PRIMARY KEY ( employee_id,
                                                                                course_id );

CREATE TABLE "Order" (
    order_id     NUMBER(7) NOT NULL,
    order_date   DATE,
    order_amount NUMBER(10),
    student_id   NUMBER(7) NOT NULL
);

COMMENT ON COLUMN "Order".order_id IS
    'Order ID ';

COMMENT ON COLUMN "Order".order_date IS
    'Date and time of order ';

COMMENT ON COLUMN "Order".order_amount IS
    'Amount of money in the order. (USD)';

ALTER TABLE "Order" ADD CONSTRAINT order_pk PRIMARY KEY ( order_id );

CREATE TABLE order_course (
    order_id        NUMBER(7) NOT NULL,
    course_id       NUMBER(7) NOT NULL,
    discount_id     NUMBER(7),
    course_quantity NUMBER(7)
);

COMMENT ON COLUMN order_course.course_quantity IS
    'number of class customers want to order';

ALTER TABLE order_course ADD CONSTRAINT order_course_pk PRIMARY KEY ( order_id,
                                                                      course_id );

CREATE TABLE payment (
    payment_id    NUMBER(7) NOT NULL,
    order_id      NUMBER(7) NOT NULL,
    "Date"        DATE,
    pay_method    VARCHAR2(30),
    payment_total NUMBER(10)
);

COMMENT ON COLUMN payment.payment_id IS
    'Unique Payment  ID ';

COMMENT ON COLUMN payment."Date" IS
    'Date and time of invoice created ';

COMMENT ON COLUMN payment.pay_method IS
    'Payment method ';

COMMENT ON COLUMN payment.payment_total IS
    'Total amount of payment';

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( payment_id );

CREATE TABLE student (
    student_id   NUMBER(7) NOT NULL,
    fname        VARCHAR2(30),
    lname        VARCHAR2(30),
    dob          DATE,
    street       VARCHAR2(30),
    city         VARCHAR2(30),
    state        VARCHAR2(30),
    zipcode      VARCHAR2(30),
    email        VARCHAR2(30),
    phone_number NUMBER(20),
    country_id   NUMBER(7) NOT NULL
);

COMMENT ON COLUMN student.student_id IS
    'Student ID';

COMMENT ON COLUMN student.fname IS
    'First name of student ';

COMMENT ON COLUMN student.lname IS
    'Last name of student ';

COMMENT ON COLUMN student.dob IS
    'Date of birth';

COMMENT ON COLUMN student.street IS
    'Address street';

COMMENT ON COLUMN student.city IS
    'Address City';

COMMENT ON COLUMN student.state IS
    'State of address';

COMMENT ON COLUMN student.zipcode IS
    'Zip Code of address ';

COMMENT ON COLUMN student.email IS
    'Student''s Email ';

COMMENT ON COLUMN student.phone_number IS
    'Student phone number ';

ALTER TABLE student ADD CONSTRAINT student_pk PRIMARY KEY ( student_id );

CREATE TABLE teacher (
    employee_id     NUMBER(7) NOT NULL,
    degree          VARCHAR2(30),
    "Level"         VARCHAR2(30),
    subjects_taught VARCHAR2(30)
);

COMMENT ON COLUMN teacher.employee_id IS
    'Employee ID';

COMMENT ON COLUMN teacher.degree IS
    'The highest degree that the teacher hold ';

COMMENT ON COLUMN teacher."Level" IS
    'Describe the level that teacher teach ';

COMMENT ON COLUMN teacher.subjects_taught IS
    'List of subjects that teachers teach';

ALTER TABLE teacher ADD CONSTRAINT teacher_pk PRIMARY KEY ( employee_id );

ALTER TABLE employee
    ADD CONSTRAINT employee_country_fk FOREIGN KEY ( country_id )
        REFERENCES country ( country_id );

ALTER TABLE fk_teacher_course
    ADD CONSTRAINT fk_teacher_course_course_fk FOREIGN KEY ( course_id )
        REFERENCES course ( course_id );

ALTER TABLE fk_teacher_course
    ADD CONSTRAINT fk_teacher_course_teacher_fk FOREIGN KEY ( employee_id )
        REFERENCES teacher ( employee_id );

ALTER TABLE order_course
    ADD CONSTRAINT order_course_course_fk FOREIGN KEY ( course_id )
        REFERENCES course ( course_id );

ALTER TABLE order_course
    ADD CONSTRAINT order_course_discount_fk FOREIGN KEY ( discount_id )
        REFERENCES discount ( discount_id );

ALTER TABLE order_course
    ADD CONSTRAINT order_course_order_fk FOREIGN KEY ( order_id )
        REFERENCES "Order" ( order_id );

ALTER TABLE "Order"
    ADD CONSTRAINT order_student_fk FOREIGN KEY ( student_id )
        REFERENCES student ( student_id );

ALTER TABLE payment
    ADD CONSTRAINT payment_order_fk FOREIGN KEY ( order_id )
        REFERENCES "Order" ( order_id );

ALTER TABLE student
    ADD CONSTRAINT student_country_fk FOREIGN KEY ( country_id )
        REFERENCES country ( country_id );

ALTER TABLE teacher
    ADD CONSTRAINT teacher_employee_fk FOREIGN KEY ( employee_id )
        REFERENCES employee ( employee_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             0
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
